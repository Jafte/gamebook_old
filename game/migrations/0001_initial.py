# Generated by Django 2.0 on 2017-12-12 00:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('telegrambot', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('order', models.SmallIntegerField(default=100, verbose_name='order')),
                ('content', models.TextField(verbose_name='content')),
                ('is_visible', models.BooleanField(default=True, verbose_name='is visible?')),
            ],
            options={
                'ordering': ['game', 'scene', 'order', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='AfterEffect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('set_property_value', models.TextField(blank=True, verbose_name='after effect action value')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='after_effects', to='game.Action')),
            ],
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('order', models.SmallIntegerField(default=100, verbose_name='order')),
                ('content', models.TextField(verbose_name='content')),
                ('is_visible', models.BooleanField(default=True, verbose_name='is visible?')),
            ],
            options={
                'ordering': ['game', 'scene', 'order', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('name', models.CharField(max_length=250, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'ordering': ['game', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='CharacterProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('type', models.CharField(choices=[('S', 'String'), ('N', 'Number')], default='N', max_length=1)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('value_s', models.CharField(blank=True, max_length=100, verbose_name='value string')),
                ('value_n', models.FloatField(blank=True, verbose_name='value number')),
                ('character', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='game.Character', verbose_name='character')),
            ],
            options={
                'ordering': ['character', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('name', models.CharField(max_length=250, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('status', models.CharField(choices=[('d', 'draft'), ('p', 'published')], default='d', max_length=1)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_games', to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Gamelog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('source', models.CharField(choices=[('u', 'user'), ('g', 'game')], default='g', max_length=1)),
                ('text', models.TextField(verbose_name='text')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Moment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('name', models.CharField(max_length=250, verbose_name='name')),
                ('order', models.SmallIntegerField(default=100, verbose_name='order')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moments', to='game.Game', verbose_name='game')),
            ],
            options={
                'ordering': ['scene', 'order', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('name', models.CharField(max_length=250, verbose_name='name')),
                ('order', models.SmallIntegerField(default=100, verbose_name='order')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenes', to='game.Game', verbose_name='game')),
            ],
            options={
                'ordering': ['game', 'order', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('status', models.CharField(choices=[('a', 'active'), ('f', 'finished')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='SessionAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('current_is_visible', models.BooleanField(default=True, verbose_name='current is visible?')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_actions', to='game.Action', verbose_name='action')),
            ],
        ),
        migrations.CreateModel(
            name='SessionBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('current_is_visible', models.BooleanField(default=True, verbose_name='current is visible?')),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_blocks', to='game.Block', verbose_name='block')),
            ],
        ),
        migrations.CreateModel(
            name='SessionCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_games', to='game.Character', verbose_name='character')),
                ('current_moment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moment_characters', to='game.Moment', verbose_name='current moment')),
                ('current_scene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scene_characters', to='game.Scene', verbose_name='current scene')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='game.Session', verbose_name='session')),
            ],
        ),
        migrations.CreateModel(
            name='SessionCharacterProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('current_value_s', models.CharField(blank=True, max_length=100, verbose_name='current value string')),
                ('current_value_n', models.FloatField(blank=True, verbose_name='current value number')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='game.SessionCharacter', verbose_name='character')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_games', to='game.CharacterProperty', verbose_name='property')),
            ],
        ),
        migrations.AddField(
            model_name='sessionblock',
            name='character',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_blocks', to='game.SessionCharacter', verbose_name='character'),
        ),
        migrations.AddField(
            model_name='sessionaction',
            name='character',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_actions', to='game.SessionCharacter', verbose_name='character'),
        ),
        migrations.AddField(
            model_name='session',
            name='active_character',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_sessions', to='game.SessionCharacter', verbose_name='active character'),
        ),
        migrations.AddField(
            model_name='session',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_sessions', to='game.Game', verbose_name='game'),
        ),
        migrations.AddField(
            model_name='session',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_sessions', to='telegrambot.User', verbose_name='user'),
        ),
        migrations.AddField(
            model_name='moment',
            name='scene',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moments', to='game.Scene', verbose_name='scene'),
        ),
        migrations.AddField(
            model_name='gamelog',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gamelogs', to='game.Session', verbose_name='session'),
        ),
        migrations.AddField(
            model_name='character',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='game.Game', verbose_name='game'),
        ),
        migrations.AddField(
            model_name='character',
            name='start_scene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scene_start_characters', to='game.Scene', verbose_name='start scene'),
        ),
        migrations.AddField(
            model_name='block',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='game.Game', verbose_name='game'),
        ),
        migrations.AddField(
            model_name='block',
            name='moment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocks', to='game.Moment', verbose_name='moment'),
        ),
        migrations.AddField(
            model_name='block',
            name='scene',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocks', to='game.Scene', verbose_name='scene'),
        ),
        migrations.AddField(
            model_name='aftereffect',
            name='go_to_moment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='after_effects', to='game.Moment'),
        ),
        migrations.AddField(
            model_name='aftereffect',
            name='go_to_scene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='after_effects', to='game.Scene'),
        ),
        migrations.AddField(
            model_name='aftereffect',
            name='hide_action',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hide_after_effects', to='game.Action'),
        ),
        migrations.AddField(
            model_name='aftereffect',
            name='hide_block',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hide_after_effects', to='game.Block'),
        ),
        migrations.AddField(
            model_name='aftereffect',
            name='set_property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='value_after_effects', to='game.CharacterProperty'),
        ),
        migrations.AddField(
            model_name='aftereffect',
            name='show_action',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='show_after_effects', to='game.Action'),
        ),
        migrations.AddField(
            model_name='aftereffect',
            name='show_block',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='show_after_effects', to='game.Block'),
        ),
        migrations.AddField(
            model_name='action',
            name='game',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='game.Game', verbose_name='game'),
        ),
        migrations.AddField(
            model_name='action',
            name='moment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions', to='game.Moment', verbose_name='moment'),
        ),
        migrations.AddField(
            model_name='action',
            name='scene',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions', to='game.Scene', verbose_name='scene'),
        ),
        migrations.AlterUniqueTogether(
            name='sessioncharacterproperty',
            unique_together={('character', 'property')},
        ),
        migrations.AlterUniqueTogether(
            name='sessioncharacter',
            unique_together={('character', 'session')},
        ),
        migrations.AlterUniqueTogether(
            name='sessionblock',
            unique_together={('block', 'character')},
        ),
        migrations.AlterUniqueTogether(
            name='sessionaction',
            unique_together={('action', 'character')},
        ),
        migrations.AlterUniqueTogether(
            name='aftereffect',
            unique_together={('action', 'go_to_moment'), ('action', 'hide_action'), ('action', 'go_to_scene'), ('action', 'set_property'), ('action', 'show_block'), ('action', 'show_action'), ('action', 'hide_block')},
        ),
    ]
